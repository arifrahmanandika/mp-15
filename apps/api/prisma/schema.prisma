// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  password        String
  name            String
  roleId          Int
  referralCode    String     @unique
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  role            UserRole   @relation(fields: [roleId], references: [id])
  referrals       Referral[] @relation("UserReferrals")
  referredUsers   Referral[] @relation("UserReferredUsers")
  points          Point[]
  organizedEvents Event[]
  tickets         Ticket[]
  reviews         Review[]
}

model UserRole {
  id    Int    @id @default(autoincrement())
  role  String @unique
  users User[]
}

model Referral {
  id             Int      @id @default(autoincrement())
  userId         Int
  referredUserId Int
  points         Int      @default(0)
  createdAt      DateTime @default(now())
  user           User     @relation("UserReferrals", fields: [userId], references: [id])
  referredUser   User     @relation("UserReferredUsers", fields: [referredUserId], references: [id])
}

model Point {
  id         Int      @id @default(autoincrement())
  userId     Int
  amount     Int      @default(0)
  usedPoints Int      @default(0)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model Event {
  id             Int         @id @default(autoincrement())
  name           String
  description    String
  date           DateTime
  location       String
  availableSeats Int
  ticketTypeId   Int
  organizerId    Int
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @default(now())
  ticketType     TicketType  @relation(fields: [ticketTypeId], references: [id])
  organizer      User        @relation(fields: [organizerId], references: [id])
  tickets        Ticket[]
  reviews        Review[]
  promotions     Promotion[]
}

model TicketType {
  id     Int     @id @default(autoincrement())
  type   String  @unique
  events Event[]
}

model Ticket {
  id        Int      @id @default(autoincrement())
  eventId   Int
  userId    Int
  price     Float
  discount  Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  eventId   Int
  userId    Int
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Promotion {
  id         Int      @id @default(autoincrement())
  eventId    Int
  discount   Float
  code       String   @unique
  usageLimit Int
  usedCount  Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  event      Event    @relation(fields: [eventId], references: [id])
}
